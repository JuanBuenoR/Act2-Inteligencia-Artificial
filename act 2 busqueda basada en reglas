# Instalar la libreria netwokx con pip install networkx
import networkx as nx

# Crear el grafo de las estaciones de Transmilenio
def create_transmilenio_graph():
    G = nx.Graph()
    # Añadimos las conexiones entre estaciones (origen, destino, weight)
    G.add_edge("Portal Norte", "Calle 127", weight=8)
    G.add_edge("Calle 127", "Calle 100", weight=3)
    G.add_edge("Calle 100", "Calle 85", weight=2)
    G.add_edge("Calle 85", "Portal Sur", weight=10)
    return G

# Función para encontrar la mejor ruta
def find_best_route(graph, start, end):
    try:
        # Usamos el algoritmo de Dijkstra para encontrar la ruta más corta
        shortest_path = nx.shortest_path(graph, source=start, target=end, weight='weight')
        shortest_distance = nx.shortest_path_length(graph, source=start, target=end, weight='weight')
        return shortest_path, shortest_distance
    except nx.NetworkXNoPath:
        return None, None

# Ejemplo de uso
if __name__ == "__main__":
    graph = create_transmilenio_graph()
    start_station = "Portal Norte"
    end_station = "Calle 85"
    route, distance = find_best_route(graph, start_station, end_station)
    if route:
        print(f"La ruta más corta entre {start_station} y {end_station} es: {route} con un total de {distance} estaciones")
    else:
        print(f"No se encontró una ruta entre {start_station} y {end_station}.")
